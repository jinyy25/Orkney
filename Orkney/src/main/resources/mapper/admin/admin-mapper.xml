<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="admin">
  	<select id="userCount" resultType="String">
  		SELECT * FROM MEMBER M WHERE EXISTS(SELECT * FROM CHATTING C WHERE M.MEMBER_NO=C.MEMBER_NO)
  	</select>
  	<select id="chatData" parameterType="map" resultType="map">
  		SELECT * FROM CHATTING WHERE MEMBER_NO=#{id} AND CHAT_ROOM=#{rNo}
  	</select>
  	<select id="roomNo" parameterType="string" resultType="string">
  		SELECT CHAT_ROOM FROM CHATTING WHERE MEMBER_NO=#{data} GROUP BY CHAT_ROOM ORDER BY CHAT_ROOM DESC
  	</select>
  	
  	<select id="selectOrderList" resultType="order">
  		SELECT * FROM ORDERS JOIN MEMBER USING(MEMBER_NO) ORDER BY ORDER_DATE DESC
  	</select>
  	
  	<update id="modifyFAQ" parameterType="map">
  		UPDATE FAQ SET FAQ_TITLE=#{title},FAQ_CONTENT=#{content},CATEGORY=#{category} WHERE FAQ_NO=#{no}
  	</update>
  	<insert id="addFAQ" parameterType="map">
  		INSERT INTO FAQ VALUES('f'||FAQ_NO.NEXTVAL,#{title},#{content},default,#{category})
  	</insert>
  	<delete id="deleteFAQ" parameterType="string">
  		DELETE FAQ WHERE FAQ_NO=#{no}
  	</delete>
  	<select id="memberList" resultType="map">
  		SELECT M.*,(SELECT SUM(TOTAL_PRICE) FROM ORDERS A WHERE M.MEMBER_NO=A.MEMBER_NO) AS PRICE FROM MEMBER M
  	</select>
  	<select id="totalData" resultType="_int">
  		SELECT COUNT(*) FROM MEMBER
  	</select>
  	<select id="memberAddr" resultType="map" parameterType="string">
  		SELECT * FROM ADDR WHERE MEMBER_NO=#{no}
  	</select>
  	<select id="orderList" parameterType="string" resultType="map">
  		SELECT * FROM ORDERS WHERE MEMBER_NO=#{no}
  	</select>
  	<delete id="deleteMember">
  		DELETE FROM MEMBER WHERE MEMBER_NO=#{no}
  	</delete>
  	<insert id="modifyPoint" parameterType="map">
  		INSERT INTO POINT VALUES(PO_SEQ.NEXTVAL,#{no},SYSDATE,#{point},#{type},#{reason})
  	</insert>
  	<update id="pointModify" parameterType="map">
  		UPDATE MEMBER SET POINT=POINT
  		<if test="type=='차감'">
  		-#{point}
  		</if>
  		<if test="type=='적립'">
  		+#{point}
  		</if>
  		WHERE MEMBER_NO=#{no}
  		</update>
  	
  	<update id="updateOrderState" parameterType="map">
  		UPDATE ORDERS SET ORDER_STATE=#{state} WHERE ORDER_NO=#{oNo}
  	</update>
  	
  	<update id="updateOrderInfo" parameterType="map">
  		UPDATE ORDERS SET ORDER_NAME=#{name}, ORDER_PHONE=#{phone}, ORDER_ADDRESS=#{address} WHERE ORDER_NO=#{no}
  	</update>
  	
  	<select id="countOrderState" resultType="map">
	select count(case when order_state='주문확인' then 1 end) as "주문확인",count(case when order_state='취소신청' then 1 end) as "취소신청",
	count(case when sort='교환신청' then 1 end)as "교환신청",count(case when sort='반품신청' then 1 end)as "반품신청"
	from order_detail join orders using(order_no)
  	</select>
  	
  	<select id="totalOrder" resultType="_int">
  		SELECT COUNT(*) FROM orders
  	</select>
  	
  	<select id="selectOrderChangeList" parameterType="map" resultType="order">
  		SELECT * FROM ORDERS join member using(member_no) where 
  		<if test='state=="취소신청"'>
  			order_state='취소신청1' OR ORDER_STATE='취소신청2'
  		</if>
  		<if test='state=="주문확인"'>  		
  		order_state=#{state} 
  		</if>
  		
  		ORDER BY ORDER_DATE DESC
  	</select>
  	
  	<update id="updateOrderListState" parameterType="map">
  		<foreach item="oNo" collection="oNos" separator=";" open="DECLARE BEGIN" close="; END;">
  			UPDATE ORDERS SET ORDER_STATE=#{state} WHERE ORDER_NO=#{oNo}
  		</foreach>
  	</update>
  	
  	<select id="selectOrderDetailChangeList" parameterType="string" resultType="orderDetail">
  		SELECT * FROM ORDER_DETAIL JOIN ORDERS USING(ORDER_NO) JOIN MEMBER USING(MEMBER_NO) JOIN PRODUCT USING(PRODUCT_NO) WHERE SORT=#{state}
  	</select>
</mapper>
