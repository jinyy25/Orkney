<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="product">



	

	<select id="productList" resultType="map">
	
	   SELECT p.*, I.*
	   FROM PRODUCT P
	   JOIN PRODUCT_IMAGE I 
	   ON P.PRODUCT_NO = I.PRODUCT_NO
	
	</select>
	
	<select id="filter" resultType="map" parameterType="map">
		<choose>
			<when test="group1=='best'">
			   SELECT P.*, I.*
			   FROM PRODUCT P
			   JOIN PRODUCT_IMAGE I 
			   ON P.PRODUCT_NO = I.PRODUCT_NO
			   WHERE 1=1
			   <if test="group2 != null and group2 != 'null'">
			    	AND PRODUCT_WIDTH = #{group2,jdbcType=VARCHAR}
<!-- 			    	DB 에 CHECK 사이즈 지정 -->
			   </if>
			   <if test="group3 != null and group3 != 'null'">
			    	AND SMALL_CATEGORY_NO = #{group3}
			    	DB 카테고리 정하기
			   </if> 
			   <if test="group4 != null and group4 != 'null'">
<!-- 			   		FILTER 가격 범위 -->
				   <choose>
					   <when test="group4 gt 0 and group4 lt 40000">
					  <![CDATA[AND PRODUCT_PRICE < 40000]]>   
					   </when>
					   <when test="group4 gt 39999 and group4 lt 50000">
					   <![CDATA[ 	AND PRODUCT_PRICE BETWEEN 39999 AND 50000]]>
					   </when>
					   <when test="group4 gt 49999 and group4 lt 60000">
					   <![CDATA[ 	AND PRODUCT_PRICE BETWEEN 49999 AND 60000]]>
					   </when>
					   <when test="group4 gt 59999 and group4 lt 70000">
					   <![CDATA[ 	AND PRODUCT_PRICE BETWEEN 49999 AND 60000]]>
					   </when>
					   <when test="group4 gt 70000">
					   <![CDATA[	AND PRODUCT_PRICE > 70000]]>
					   </when>
				   </choose>	
			   </if>
			   <if test="group5 != null and group5 != 'null'">
<!-- 			   FILTER 색상 -->
			    	AND P.PRODUCT_COLOR = #{group5}
			    	
			   </if>
			   
			</when>
			
			<when test="group1=='lowPrice'">
			   SELECT P.*, I.*
			   FROM PRODUCT P
			   JOIN PRODUCT_IMAGE I 
			   ON P.PRODUCT_NO = I.PRODUCT_NO
			   WHERE 1=1
			   <if test="group2 != null and group2 != 'null'">
			    	AND PRODUCT_WIDTH = #{group2}
<!-- 			    	DB 에 CHECK 사이즈 지정 -->
			   </if>
			   <if test="group3 != null and group3 != 'null'">
			    	AND SMALL_CATEGORY_NO = #{group3}
<!-- 			    	DB 카테고리 정하기 -->
			   </if>
			   <if test="group4 != null and group4 != 'null'">
<!-- 			   		FILTER 가격 범위 -->
				  <choose>
					   <when test="group4 gt 0 and group4 lt 40000">
					  <![CDATA[AND PRODUCT_PRICE < 40000]]>   
					   </when>
					   <when test="group4 gt 39999 and group4 lt 50000">
					   <![CDATA[ 	AND PRODUCT_PRICE BETWEEN 39999 AND 50000]]>
					   </when>
					   <when test="group4 gt 49999 and group4 lt 60000">
					   <![CDATA[ 	AND PRODUCT_PRICE BETWEEN 49999 AND 60000]]>
					   </when>
					   <when test="group4 gt 59999 and group4 lt 70000">
					   <![CDATA[ 	AND PRODUCT_PRICE BETWEEN 49999 AND 60000]]>
					   </when>
					   <when test="group4 gt 70000">
					   <![CDATA[	AND PRODUCT_PRICE > 70000]]>
					   </when>
				   </choose>	
			   </if>
			   <if test="group5 !=null and group5 != 'null'">
<!-- 			   FILTER 색상 -->
			    	AND P.PRODUCT_COLOR = #{group5}
			    	
			   </if>
			   ORDER BY PRODUCT_PRICE ASC
			</when>
			
			<when test="group1=='highPrice'">
			   SELECT P.*, I.*
			   FROM PRODUCT P
			   JOIN PRODUCT_IMAGE I 
			   ON P.PRODUCT_NO = I.PRODUCT_NO
			   WHERE 1=1
			   <if test="group2!=null and group2 != 'null'">
			    	AND PRODUCT_WIDTH = #{group2}
<!-- 			    	DB 에 CHECK 사이즈 지정 -->
			   </if>
			   <if test="group3!=null and group3 != 'null'">
			    	AND SMALL_CATEGORY_NO = #{group3}
<!-- 			    	DB 카테고리 정하기 -->
			   </if>
			   <if test="group4!=null and group4 != 'null'">
<!-- 			   		FILTER 가격 범위 -->
				  <choose>
					   <when test="group4 gt 0 and group4 lt 40000">
					  <![CDATA[AND PRODUCT_PRICE < 40000]]>   
					   </when>
					   <when test="group4 gt 39999 and group4 lt 50000">
					   <![CDATA[ 	AND PRODUCT_PRICE BETWEEN 39999 AND 50000]]>
					   </when>
					   <when test="group4 gt 49999 and group4 lt 60000">
					   <![CDATA[ 	AND PRODUCT_PRICE BETWEEN 49999 AND 60000]]>
					   </when>
					   <when test="group4 gt 59999 and group4 lt 70000">
					   <![CDATA[ 	AND PRODUCT_PRICE BETWEEN 49999 AND 60000]]>
					   </when>
					   <when test="group4 gt 70000">
					   <![CDATA[	AND PRODUCT_PRICE > 70000]]>
					   </when>
				   </choose>	
			   </if>
			   <if test="group5!=null and group5 != 'null'">
<!-- 			   FILTER 색상 -->
			    	AND P.PRODUCT_COLOR = #{group5}
			    	
			   </if>
			   ORDER BY PRODUCT_PRICE DESC
			</when>
			
			<when test="group1=='newProduct'">
			   SELECT P.*, I.*
			   FROM PRODUCT P
			   JOIN PRODUCT_IMAGE I 
			   ON P.PRODUCT_NO = I.PRODUCT_NO
			   WHERE 1=1
			   <if test="group2!=null and group2 != 'null'">
			    	AND PRODUCT_WIDTH = #{group2}
<!-- 			    	DB 에 CHECK 사이즈 지정 -->
			   </if>
			   <if test="group3!=null and group3 != 'null'">
			    	AND SMALL_CATEGORY_NO = #{group3}
<!-- 			    	DB 카테고리 정하기 -->
			   </if>
			   <if test="group4!=null and group4 != 'null'">
<!-- 			   		FILTER 가격 범위 -->
				  <choose>
					   <when test="group4 gt 0 and group4 lt 40000">
					  <![CDATA[AND PRODUCT_PRICE < 40000]]>   
					   </when>
					   <when test="group4 gt 39999 and group4 lt 50000">
					   <![CDATA[ 	AND PRODUCT_PRICE BETWEEN 39999 AND 50000]]>
					   </when>
					   <when test="group4 gt 49999 and group4 lt 60000">
					   <![CDATA[ 	AND PRODUCT_PRICE BETWEEN 49999 AND 60000]]>
					   </when>
					   <when test="group4 gt 59999 and group4 lt 70000">
					   <![CDATA[ 	AND PRODUCT_PRICE BETWEEN 49999 AND 60000]]>
					   </when>
					   <when test="group4 gt 70000">
					   <![CDATA[	AND PRODUCT_PRICE > 70000]]>
					   </when>
				   </choose>	
			   </if>
			   <if test="group5!=null and group5 != 'null'">
<!-- 			   FILTER 색상 -->
			    	AND P.PRODUCT_COLOR = #{group5}
			    	
			   </if>
			   ORDER BY PRODUCT_PRICE ASC
			</when>
			
			<when test="group1=='name'">
			   SELECT P.*, I.*
			   FROM PRODUCT P
			   JOIN PRODUCT_IMAGE I 
			   ON P.PRODUCT_NO = I.PRODUCT_NO
			   WHERE 1=1
			   <if test="group2!=null and group2 != 'null'">
			    	AND PRODUCT_WIDTH = #{group2}
<!-- 			    	DB 에 CHECK 사이즈 지정 -->
			   </if>
			   <if test="group3!=null and group3 != 'null'">
			    	AND SMALL_CATEGORY_NO = #{group3}
<!-- 			    	DB 카테고리 정하기 -->
			   </if>
			   <if test="group4!=null and group4 != 'null'">
<!-- 			   		FILTER 가격 범위 -->
				 <choose>
					   <when test="group4 gt 0 and group4 lt 40000">
					  <![CDATA[AND PRODUCT_PRICE < 40000]]>   
					   </when>
					   <when test="group4 gt 39999 and group4 lt 50000">
					   <![CDATA[ 	AND PRODUCT_PRICE BETWEEN 39999 AND 50000]]>
					   </when>
					   <when test="group4 gt 49999 and group4 lt 60000">
					   <![CDATA[ 	AND PRODUCT_PRICE BETWEEN 49999 AND 60000]]>
					   </when>
					   <when test="group4 gt 59999 and group4 lt 70000">
					   <![CDATA[ 	AND PRODUCT_PRICE BETWEEN 49999 AND 60000]]>
					   </when>
					   <when test="group4 gt 70000">
					   <![CDATA[	AND PRODUCT_PRICE > 70000]]>
					   </when>
				   </choose>	
			   </if>
			   <if test="group5!=null and group5 != 'null'">
<!-- 			   FILTER 색상 -->
			    	AND P.PRODUCT_COLOR = #{group5}
			    	
			   </if>
			   ORDER BY PRODUCT_NAME ASC
			</when>
		</choose>

	
	</select>
	
	
	<!-- <select id="productList" resultType="map">
	
	   SELECT p.*, I.*
	   FROM PRODUCT P
	   JOIN PRODUCT_IMAGE I 
	   ON P.PRODUCT_NO = I.PRODUCT_NO
	
	</select>
	
	
	
	<select id="lowPriceFilter" resultType="map">
	
	   SELECT p.*, I.*
	   FROM PRODUCT P
	   JOIN PRODUCT_IMAGE I 
	   ON P.PRODUCT_NO = I.PRODUCT_NO
	   ORDER BY PRODUCT_PRICE ASC
	
	</select>
	
	<select id="highPriceFilter" resultType="map">
	   SELECT p.*, I.*
	   FROM PRODUCT P
	   JOIN PRODUCT_IMAGE I 
	   ON P.PRODUCT_NO = I.PRODUCT_NO
	   ORDER BY PRODUCT_PRICE DESC
	</select>
	
	<select id="newProductFilter" resultType="map">
	   SELECT p.*, I.*
	   FROM PRODUCT P
	   JOIN PRODUCT_IMAGE I 
	   ON P.PRODUCT_NO = I.PRODUCT_NO
	   ORDER BY PRODUCT_ENROLL_DATE ASC
	</select>
	
	<select id="nameFilter" resultType="map">
	   SELECT p.*, I.*
	   FROM PRODUCT P
	   JOIN PRODUCT_IMAGE I 
	   ON P.PRODUCT_NO = I.PRODUCT_NO
	   ORDER BY PRODUCT_NAME ASC
	</select> -->


<!-- ==================================================================================== -->


  	<select id="selectRooms" resultType="map" parameterType="string">
  		SELECT * FROM SHOWROOM WHERE ROOM_CATEGORY=#{type}
  	</select>
   	<select id="selectRoomsProduct" resultType="map" parameterType="string">
  		  SELECT * FROM ROOMS E
				JOIN PRODUCT R ON E.PRODUCT_NO= R.PRODUCT_NO
             JOIN PRODUCT_IMAGE J ON E.PRODUCT_NO= J.PRODUCT_NO
                 JOIN SHOWROOM Q ON Q.ROOM_NO= E.ROOM_NO
                WHERE ROOM_CATEGORY= #{type}  AND J.PRODUCT_COLOR='normal' 
               
	</select> 
	<select id="roomsDetail" resultType="map" parameterType="string">
		 SELECT * FROM ROOMS E
				JOIN PRODUCT R ON E.PRODUCT_NO= R.PRODUCT_NO
				LEFT JOIN PRODUCT_IMAGE J ON E.PRODUCT_NO= J.PRODUCT_NO
				WHERE E.ROOM_NO=#{type} AND J.PRODUCT_COLOR='normal'
	</select>
	<select id="selectRoomsTitle" resultType="map" parameterType="string">
		SELECT * FROM ROOMS_TITLE WHERE ROOM_CATEGORY=#{type}
	</select>
	<select id="listProduct" resultType="map" parameterType="string">
		
		 SELECT * FROM PRODUCT E
				LEFT JOIN PRODUCT_IMAGE J ON E.PRODUCT_NO= J.PRODUCT_NO
				WHERE J.PRODUCT_COLOR='normal' AND ROWNUM <![CDATA[<]]> #{type} 
				
	</select>
	<select id="allProductList" resultType="string">
		SELECT COUNT(*)FROM PRODUCT E
				 JOIN PRODUCT_IMAGE J ON E.PRODUCT_NO= J.PRODUCT_NO
				WHERE J.PRODUCT_COLOR='normal'
	</select>
	<select id="productCategory" parameterType="map" resultType="map">
		
		 SELECT * FROM PRODUCT E
				 JOIN PRODUCT_IMAGE J ON E.PRODUCT_NO= J.PRODUCT_NO
				  JOIN BIG_CATEGORY T ON T.BIG_CATEGORY_NO=E.BIG_CATEGORY_NO
				WHERE J.PRODUCT_COLOR='normal' AND ROWNUM <![CDATA[<]]> #{type} 
				 <if test=" text!='' ">
				AND T.BIG_CATEGORY_CONTENT=#{text}
				</if>
				
	</select>
	<select id="sale" resultType="map">
		
				
		 SELECT * FROM PRODUCT E
				 JOIN PRODUCT_IMAGE J ON E.PRODUCT_NO= J.PRODUCT_NO
				  JOIN BIG_CATEGORY T ON T.BIG_CATEGORY_NO=E.BIG_CATEGORY_NO
				WHERE J.PRODUCT_COLOR='normal' AND E.SALE_PER IS NOT NULL			
	</select>
	<update id="insertRoom" parameterType="map" >
		UPDATE SHOWROOM SET ROOM_PIC = #{roomsImg}
		WHERE ROOM_NO = #{categoryNo} AND ROOM_CATEGORY = #{category}
	</update>
	
	<select id="roomChange" resultType="map">
		    <!-- SELECT PRODUCT_NO FROM PRODUCT MINUS
                    SELECT PRODUCT_NO FROM ROOMS -->
                      SELECT * FROM PRODUCT A
        WHERE A.PRODUCT_NO NOT IN (SELECT B.PRODUCT_NO FROM ROOMS B)
	</select>
	<insert id="updateRoom" parameterType="map">
		 INSERT ALL INTO ROOMS VALUES 
         <foreach collection="one" item="rooms" index="index" open="(" separator="," close=")">
         #{rooms}
         </foreach>
         <if test="two!=null">
 		<foreach collection="two" item="rooms" index="index" open="INTO ROOMS VALUES (" separator="," close=")">
         #{rooms}
         </foreach>
         </if>
          <if test="three!=null">
		<foreach collection="three" item="rooms" index="index" open="INTO ROOMS VALUES (" separator="," close=")">
         #{rooms}
         </foreach>
          </if>
          <if test="four!=null">
         <foreach collection="four" item="rooms" index="index" open="INTO ROOMS VALUES (" separator="," close=")">
         #{rooms}
         </foreach>
          </if>
          <if test="five!=null">
         <foreach collection="five" item="rooms" index="index" open="INTO ROOMS VALUES (" separator="," close=") ">
         #{rooms}
         </foreach>	
         </if>
         SELECT *FROM DUAL																																								
	</insert>
		<update id="roomsTitle" parameterType="map">
			UPDATE ROOMS_TITLE SET ROOM_H2=#{title},
			ROOM_CONTEXT=#{content}
			WHERE ROOM_CATEGORY=#{roomsTitle} AND ROOMS_TOP_BOTTOM=#{roomsSubTitle}
		</update>
		 
 	<select id="buttomProduct" resultType="map" parameterType="map">
		SELECT *FROM PRODUCT WHERE PRODUCT_NO in
		<foreach collection="type" item="type" open="(" close=")" separator=",">
		 #{type}
		</foreach>
	</select> 
</mapper>
		

